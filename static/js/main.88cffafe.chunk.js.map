{"version":3,"sources":["containers/Navigation/PageNavigator/PageNavigator.tsx","containers/Navigation/SiteNavigator/SiteNavigator.tsx","containers/Navigation/Navigation.tsx","containers/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["PageNavigator","className","SiteNavigator","Navigation","props","App","id","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAWeA,MARf,WACE,OACE,qBAAKC,UAAU,iBAAf,SACI,qBAAKA,UAAU,cAAf,yB,MCQOC,MAXf,WACE,OACE,sBAAKD,UAAU,iBAAf,UACI,qBAAKA,UAAU,QAAf,uBACE,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAU,aAAf,yBCOGE,EATI,SAACC,GAClB,OACE,sBAAKH,UAAU,aAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,QC4COI,MAjDf,WACE,OACE,sBAAKJ,UAAU,MAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,mBAAf,UACI,qBAAKA,UAAU,eACf,sBAAKK,GAAG,WAAWL,UAAU,mBAA7B,UACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,gBAAf,uCACA,qBAAKA,UAAU,eAAf,uIACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,qBAAKA,UAAU,eAAf,2HACA,uBACA,qBAAKA,UAAU,eAAf,oJACA,uBACA,qBAAKA,UAAU,eAAf,qMAEF,qBAAKA,UAAU,cAAf,SAA6B,qBAAKM,IAAI,2CAExC,sBAAKN,UAAU,mBAAf,UACE,qBAAKA,UAAU,cAAf,SAA6B,qBAAKM,IAAI,wCACtC,sBAAKN,UAAU,gBAAf,UACE,qBAAMA,UAAU,gBAAhB,iCACA,qBAAKA,UAAU,eAAf,kFACA,uBACA,qBAAKA,UAAU,eAAf,kEACA,uBACA,qBAAKA,UAAU,eAAf,4DAEF,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,eAAf,sCACA,uBACA,qBAAKA,UAAU,eAAf,kCACA,uBACA,qBAAKA,UAAU,eAAf,4BACA,uBACA,qBAAKA,UAAU,eAAf,gDChCCO,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.88cffafe.chunk.js","sourcesContent":["import React from 'react';\nimport './PageNavigator.css';\n\nfunction PageNavigator() {\n  return (\n    <div className=\"page-navigator\">\n        <div className=\"page-marker\">Overview</div>\n    </div>\n  );\n}\n\nexport default PageNavigator;\n","import React from 'react';\nimport './SiteNavigator.css';\n\nfunction SiteNavigator() {\n  return (\n    <div className=\"site-navigator\">\n        <div className=\"title\">gadgetlab</div>\n          <div className=\"pages\">\n            <div className=\"page-title\">A.X.1</div>\n          </div>\n    </div>\n  );\n}\n\nexport default SiteNavigator;\n","import React from 'react';\nimport './Navigation.css';\n\nimport PageNavigator from './PageNavigator/PageNavigator';\nimport SiteNavigator from './SiteNavigator/SiteNavigator';\n\nconst Navigation = (props: any) => {\n  return (\n    <div className=\"navigation\">\n        <SiteNavigator/>\n        <PageNavigator/>\n    </div>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\nimport './App.css';\n\nimport Navigation from '../Navigation/Navigation';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Navigation/>\n      <div className=\"collection-stack\">\n          <div className=\"stack-mask\"/>\n          <div id=\"overview\" className=\"block-collection\">\n            <div className=\"content-block\">\n              <div className=\"content-title\">Bring Life Back To Music.</div>\n              <div className=\"content-text\">Electronic music performances are under appreciated because there is a disconnect between the performer and the audience.</div>\n              <br/>\n              <br/>\n              <br/>\n              <br/>\n              <br/>\n              <br/>\n              <div className=\"content-text\">Acoustic instruments (guitar, keyboard) are understood. Action ‘x’ results in output ‘y’.</div>\n              <br/>\n              <div className=\"content-text\">The audience is not confused by what the performer is doing. Therefore, the audience has enough context to appreciate the performance.</div>\n              <br/>\n              <div className=\"content-text\">Electronic music performance controllers are cryptic. Action ‘x’ results in output ‘?’. It begs the question, is the performer actually doing anything on stage?</div>\n            </div>\n            <div className=\"image-block\"><img src=\"/app-screenshots/screenshot-1.svg\"/></div>\n          </div>\n          <div className=\"block-collection\">\n            <div className=\"image-block\"><img src=\"/app-screenshots/screenshot-2.svg\"/></div>\n            <div className=\"content-block\">\n              <div  className=\"content-title\">Perform With Style.</div>\n              <div className=\"content-text\">Configure layouts to showcase your skills and complement your sound.</div>\n              <br/>\n              <div className=\"content-text\">Drag-and-Drop gadgets from the browser to the board.</div>\n              <br/>\n              <div className=\"content-text\">Edit the look and behavior of each gadget. </div>\n            </div>\n            <div className=\"content-block\">\n              <div className=\"content-text\">A.X.1 is designed to be:</div>\n              <br/>\n              <div className=\"content-text\">- Exciting to watch.</div>\n              <br/>\n              <div className=\"content-text\">- Fun to play.</div>\n              <br/>\n              <div className=\"content-text\">- Difficult to master</div>\n            </div>\n          </div>\n        </div>\n  </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}